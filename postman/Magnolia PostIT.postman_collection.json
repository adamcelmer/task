{
	"info": {
		"_postman_id": "e7cc16df-ab3e-4351-b09e-88a4b3fe33e2",
		"name": "Magnolia PostIT",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1369395"
	},
	"item": [
		{
			"name": "User register",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "email",
							"value": "adamcelmer94@gmail.com",
							"type": "text"
						},
						{
							"key": "password",
							"value": "password",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/auth/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "User login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(pm.response.json().token);",
							"pm.collectionVariables.set(\"auth_token\", pm.response.json().token);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "email",
							"value": "test@magnolia.com",
							"type": "text"
						},
						{
							"key": "password",
							"value": "password",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/auth/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Note create",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log(pm.collectionVariables.get(\"auth_token\"));",
							"pm.request.headers.add(\"Authorization: Bearer \" + pm.collectionVariables.get(\"auth_token\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"note_id\", pm.response.json().id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Test note {{$randomInt}}\",\n    \"content\": \"test content\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/notes",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"notes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Note delete",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log(pm.collectionVariables.get(\"auth_token\"));",
							"pm.request.headers.add(\"Authorization: Bearer \" + pm.collectionVariables.get(\"auth_token\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/notes/{{note_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"notes",
						"{{note_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Note get by id",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log(pm.collectionVariables.get(\"auth_token\"));",
							"pm.request.headers.add(\"Authorization: Bearer \" + pm.collectionVariables.get(\"auth_token\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/notes/{{note_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"notes",
						"{{note_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Notes get all",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log(pm.collectionVariables.get(\"auth_token\"));",
							"pm.request.headers.add(\"Authorization: Bearer \" + pm.collectionVariables.get(\"auth_token\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/notes?page=0&limit=20",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"notes"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "20"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Notes get all versions",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log(pm.collectionVariables.get(\"auth_token\"));",
							"pm.request.headers.add(\"Authorization: Bearer \" + pm.collectionVariables.get(\"auth_token\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/notes/{{note_id}}/versions?page=0&limit=20",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"notes",
						"{{note_id}}",
						"versions"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "20"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Note create new version",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log(pm.collectionVariables.get(\"auth_token\"));",
							"pm.request.headers.add(\"Authorization: Bearer \" + pm.collectionVariables.get(\"auth_token\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"content\": \"new content\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/notes/{{note_id}}/versions",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"notes",
						"{{note_id}}",
						"versions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Note version restore",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log(pm.collectionVariables.get(\"auth_token\"));",
							"pm.request.headers.add(\"Authorization: Bearer \" + pm.collectionVariables.get(\"auth_token\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/notes/{{note_id}}/versions/c067b0c2-de39-417c-993a-21481b837194/resotre",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"notes",
						"{{note_id}}",
						"versions",
						"c067b0c2-de39-417c-993a-21481b837194",
						"resotre"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "auth_token",
			"value": ""
		},
		{
			"key": "note_id",
			"value": ""
		},
		{
			"key": "base_url",
			"value": "http://localhost:8091"
		}
	]
}